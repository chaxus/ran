import{_ as a,c as s,o as e,al as i}from"./chunks/framework.BOE7hEeL.js";const k=JSON.parse('{"title":"convertImageToBase64","description":"","frontmatter":{},"headers":[],"relativePath":"cn/src/ranuts/utils/convert_image_to_base64.md","filePath":"cn/src/ranuts/utils/convert_image_to_base64.md","lastUpdated":1741496479000}'),n={name:"cn/src/ranuts/utils/convert_image_to_base64.md"};function d(r,t,o,h,l,p){return e(),s("div",null,t[0]||(t[0]=[i(`<h1 id="convertimagetobase64" tabindex="-1">convertImageToBase64 <a class="header-anchor" href="#convertimagetobase64" aria-label="Permalink to &quot;convertImageToBase64&quot;">​</a></h1><p>图片转<code>base64</code></p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="return" tabindex="-1">Return <a class="header-anchor" href="#return" aria-label="Permalink to &quot;Return&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>success</code></td><td>是否转换成功</td><td><code>boolean</code></td></tr><tr><td><code>data</code></td><td>转换成功后的值</td><td><code>string</code>,<code>ArrayBuffer</code> , <code>null</code></td></tr><tr><td><code>message</code></td><td>转换成功或失败的原因</td><td><code>string</code></td></tr></tbody></table><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>file</td><td>传入的文件</td><td><code>File</code></td><td>无</td></tr></tbody></table><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { convertImageToBase64 } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;ranuts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">convertImageToBase64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,9)]))}const E=a(n,[["render",d]]);export{k as __pageData,E as default};
