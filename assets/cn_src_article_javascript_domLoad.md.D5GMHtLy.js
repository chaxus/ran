import{_ as e,c as t,a8 as s,o as i}from"./chunks/framework.BV76-6_x.js";const u=JSON.parse('{"title":"页面加载完成后事件","description":"","frontmatter":{},"headers":[],"relativePath":"cn/src/article/javascript/domLoad.md","filePath":"cn/src/article/javascript/domLoad.md","lastUpdated":1733104613000}'),n={name:"cn/src/article/javascript/domLoad.md"};function o(d,a,l,r,c,h){return i(),t("div",null,a[0]||(a[0]=[s('<h1 id="页面加载完成后事件" tabindex="-1">页面加载完成后事件 <a class="header-anchor" href="#页面加载完成后事件" aria-label="Permalink to &quot;页面加载完成后事件&quot;">​</a></h1><h2 id="window-onload" tabindex="-1">window.onload <a class="header-anchor" href="#window-onload" aria-label="Permalink to &quot;window.onload&quot;">​</a></h2><h2 id="domcontentloaded" tabindex="-1">DOMContentLoaded <a class="header-anchor" href="#domcontentloaded" aria-label="Permalink to &quot;DOMContentLoaded&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DOMContentLoaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fun);</span></span></code></pre></div><h2 id="body-onload-fun" tabindex="-1"><code>&lt;body onload=&quot;fun()&quot;&gt;</code> <a class="header-anchor" href="#body-onload-fun" aria-label="Permalink to &quot;`&lt;body onload=&quot;fun()&quot;&gt;`&quot;">​</a></h2><h2 id="readystate" tabindex="-1">readyState <a class="header-anchor" href="#readystate" aria-label="Permalink to &quot;readyState&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.readyState;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.onreadystatechange;</span></span></code></pre></div><p>一个文档的 readyState 可以是以下之一：</p><ul><li>loading / 加载。document 仍在加载。</li><li>interactive / 互动。文档已经完成加载，文档已被解析，但是诸如图像，样式表和框架之类的子资源仍在加载。</li><li>complete / 完成。T 文档和所有子资源已完成加载。状态表示 load 事件即将被触发。</li></ul>',9)]))}const k=e(n,[["render",o]]);export{u as __pageData,k as default};
