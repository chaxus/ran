import{_ as s,o as i,c as a,a6 as e}from"./chunks/framework.DtQg34ca.js";const F=JSON.parse('{"title":"项目地址：","description":"","frontmatter":{},"headers":[],"relativePath":"cn/src/note/libreoffice2wasm.md","filePath":"cn/src/note/libreoffice2wasm.md","lastUpdated":1724555424000}'),t={name:"cn/src/note/libreoffice2wasm.md"},n=e(`<h1 id="项目地址" tabindex="-1">项目地址： <a class="header-anchor" href="#项目地址" aria-label="Permalink to &quot;项目地址：&quot;">​</a></h1><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://git.libreoffice.org/core</span></span></code></pre></div><p>github 地址：<code>https://github.com/LibreOffice/core/blob/master/static/README.wasm.md</code></p><h1 id="遇到问题" tabindex="-1">遇到问题： <a class="header-anchor" href="#遇到问题" aria-label="Permalink to &quot;遇到问题：&quot;">​</a></h1><ol><li>执行 <code>./autogen.sh</code>报错，提示<code>Failed to run aclocal at ./autogen.sh line 195.</code></li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> automake</span></span></code></pre></div><p>安装完成后，执行<code>aclocal --version</code>或者<code>automake --version</code>检查是否安装完成</p><ol start="2"><li>执行 <code>./autogen.sh</code>遇到报错：</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checking</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configure:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (/usr/bin/make </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">version</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> needed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> running</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./autogen.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 323.</span></span></code></pre></div><p>通过 <code>make --version</code> 检查 make 的版本，执行 <code>brew install make</code>，再执行 <code>brew upgrade</code> 进行升级。确保 <code>make</code>的版本大于 <code>4.0</code></p><p>当使用 <code>brew</code> 安装 <code>GNU Make</code> 时，它通常会被命名为 <code>gmake</code> 而不是 <code>make</code> ，以区分于 <code>macOS</code> 系统自带的 <code>BSD Make</code>。如果你希望在使用 <code>make</code> 命令时实际上调用 <code>gmake</code> ，需要进行一些特殊处理来替换或设置别名。</p><p>在.zshrc 文件中添加如下行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configure the brew installation of gmake, alias to make</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gmake&#39;</span></span></code></pre></div><p>然后，保存文件并重新加载配置文件（通过 <code>source ~/.zshrc</code> 或重新打开终端）。</p><p>在项目中搜索并替换成：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># args.makecmd = &#39;/usr/bin/make&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">args.makecmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/opt/homebrew/bin/gmake&#39;</span></span></code></pre></div>`,16),h=[n];function l(p,k,o,d,c,r){return i(),a("div",null,h)}const m=s(t,[["render",l]]);export{F as __pageData,m as default};
