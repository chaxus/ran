import{_ as a,o as e,c as o,Q as s}from"./chunks/framework.411424ec.js";const m=JSON.parse('{"title":"页面加载完成后事件","description":"","frontmatter":{},"headers":[],"relativePath":"src/article/javascript/domLoad.md","filePath":"src/article/javascript/domLoad.md","lastUpdated":1699202726000}'),t={name:"src/article/javascript/domLoad.md"},n=s(`<h1 id="页面加载完成后事件" tabindex="-1">页面加载完成后事件 <a class="header-anchor" href="#页面加载完成后事件" aria-label="Permalink to &quot;页面加载完成后事件&quot;">​</a></h1><h2 id="window-onload" tabindex="-1">window.onload <a class="header-anchor" href="#window-onload" aria-label="Permalink to &quot;window.onload&quot;">​</a></h2><h2 id="domcontentloaded" tabindex="-1">DOMContentLoaded <a class="header-anchor" href="#domcontentloaded" aria-label="Permalink to &quot;DOMContentLoaded&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;DOMContentLoaded&#39;</span><span style="color:#E1E4E8;">, fun);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;DOMContentLoaded&#39;</span><span style="color:#24292E;">, fun);</span></span></code></pre></div><h2 id="body-onload-fun" tabindex="-1"><code>&lt;body onload=&quot;fun()&quot;&gt;</code> <a class="header-anchor" href="#body-onload-fun" aria-label="Permalink to &quot;\`&lt;body onload=&quot;fun()&quot;&gt;\`&quot;">​</a></h2><h2 id="readystate" tabindex="-1">readyState <a class="header-anchor" href="#readystate" aria-label="Permalink to &quot;readyState&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.readyState;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">document.onreadystatechange;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.readyState;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">document.onreadystatechange;</span></span></code></pre></div><p>一个文档的 readyState 可以是以下之一：</p><ul><li>loading / 加载 。document 仍在加载。</li><li>interactive / 互动。文档已经完成加载，文档已被解析，但是诸如图像，样式表和框架之类的子资源仍在加载。</li><li>complete / 完成。T 文档和所有子资源已完成加载。状态表示 load 事件即将被触发。</li></ul>`,9),l=[n];function d(c,r,i,p,h,u){return e(),o("div",null,l)}const _=a(t,[["render",d]]);export{m as __pageData,_ as default};
