import{_ as t,o as a,c as s,N as e}from"./chunks/framework.6fe2e870.js";const r="/ran/assets/sort.0e02a465.png",n="/ran/assets/complexity.aded73a0.png",b=JSON.parse('{"title":"十大经典排序","description":"","frontmatter":{},"headers":[],"relativePath":"src/ranuts/sort/index.md","lastUpdated":1690257751000}'),o={name:"src/ranuts/sort/index.md"},i=e('<h1 id="十大经典排序" tabindex="-1">十大经典排序 <a class="header-anchor" href="#十大经典排序" aria-label="Permalink to &quot;十大经典排序&quot;">​</a></h1><p>十种常见排序算法可以分为两大类：</p><ul><li><strong>比较类排序</strong>：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破 O(nlogn)，因此也称为非线性时间比较类排序。</li><li><strong>非比较类排序</strong>：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此也称为线性时间非比较类排序。 <img src="'+r+'" alt="排序分类"> 0.2 算法复杂度</li></ul><p><img src="'+n+'" alt="算法复杂度"> 0.3 相关概念</p><ul><li>稳定：如果 a 原本在 b 前面，而 a=b，排序之后 a 仍然在 b 的前面。</li><li>不稳定：如果 a 原本在 b 的前面，而 a=b，排序之后 a 可能会出现在 b 的后面。</li><li>时间复杂度：对排序数据的总的操作次数。反映当 n 变化时，操作次数呈现什么规律。</li><li>空间复杂度：是指算法在计算机内执行时所需存储空间的度量，它也是数据规模 n 的函数。</li></ul>',5),l=[i];function _(c,d,p,m,u,g){return a(),s("div",null,l)}const f=t(o,[["render",_]]);export{b as __pageData,f as default};
