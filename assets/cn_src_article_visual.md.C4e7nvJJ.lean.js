import{_ as n,c as k,o as l,al as a,j as s,a as i}from"./chunks/framework.BOE7hEeL.js";const F=JSON.parse('{"title":"可视化渲染引擎","description":"","frontmatter":{},"headers":[],"relativePath":"cn/src/article/visual.md","filePath":"cn/src/article/visual.md","lastUpdated":1741496405000}'),p={name:"cn/src/article/visual.md"};function t(e,h,E,r,d,g){return l(),k("div",null,h[0]||(h[0]=[a("",65),s("r-math",{latex:"(x - a)^{2} + (y - b)^{2} = r^{2}"},null,-1),a("",13),s("r-math",{latex:"\\frac{x^2}{a^2} + \\frac{y^2}{b^2} = 1"},null,-1),a("",60),s("r-math",{latex:"\\begin{bmatrix} \\cos \\theta & -\\sin \\theta \\\\ \\sin \\theta & \\cos \\theta \\end{bmatrix}"},null,-1),s("p",null,[i("如果我们有一个二维向量"),s("r-math",{style:{display:"inline-block"},latex:"\\vec{v} = \\begin{bmatrix} x \\\\ y \\end{bmatrix}"}),i("，则旋转后的向量 可以通过矩阵乘法得到：")],-1),s("r-math",{latex:"\\vec{v}' = R(\\theta) \\vec{v} = \\begin{bmatrix} \\cos \\theta & -\\sin \\theta \\\\ \\sin \\theta & \\cos \\theta \\end{bmatrix} \\begin{bmatrix} x \\\\ y \\end{bmatrix}"},null,-1),a("",3),s("r-math",{latex:"\\left[ \\begin{matrix} cos(y) & sin(x) \\\\ sin(y) & cos(x) \\\\ \\end{matrix} \\right]"},null,-1),s("p",null,"缩放矩阵：",-1),s("r-math",{latex:"\\begin{bmatrix} s_x & 0 \\\\ 0 & s_y \\end{bmatrix}"},null,-1),s("p",null,"矩阵的乘法：",-1),s("r-math",{latex:"\\begin{bmatrix} s_x & 0 \\\\ 0 & s_y \\end{bmatrix} \\begin{bmatrix} x \\\\ y \\end{bmatrix} = \\begin{bmatrix} s_x x \\\\ s_y y \\end{bmatrix}"},null,-1),a("",40),s("r-math",{latex:"\\frac{x^2}{a^2} + \\frac{y^2}{b^2} = 1"},null,-1),s("p",null,[i("因此只要"),s("r-math",{style:{display:"inline-block"},latex:"\\frac{x^2}{a^2} + \\frac{y^2}{b^2} < 1"}),i(",我们就判断待检测点落在椭圆的内部")],-1),a("",14),s("r-math",{latex:"B(t) = (1-t)^2 \\mathbf{P_0} + 2t(1-t) \\mathbf{P_1} + t^2 \\mathbf{P_2}, \\quad t \\in [0, 1]"},null,-1),s("p",null,"起点（P0）：这是曲线开始的位置。在绘制过程中，曲线会精确地通过这个点。 控制点（P1）：这个点是用来控制曲线形状和弯曲程度的。它不一定在曲线上，但会对曲线的走向产生重要影响。通过调整控制点的位置，可以改变曲线的弯曲程度和方向。 终点（P2）：这是曲线结束的位置。同样地，曲线也会精确地通过这个点。",-1),s("p",null,"我们首先要在贝塞尔曲线上采样一系列的点",-1),s("p",null,[i("贝塞尔曲线是一个 "),s("r-math",{style:{display:"inline-block"},latex:"x"}),i(" 和 "),s("r-math",{style:{display:"inline-block"},latex:"y"}),i(" 关于 "),s("r-math",{style:{display:"inline-block"},latex:"t"}),i(" 的参数方程，"),s("r-math",{style:{display:"inline-block"},latex:"t\\in[0,1]"}),i("，要在贝塞尔曲线上采样多个点，可以把"),s("r-math",{style:{display:"inline-block"},latex:"[0,1]"}),i("这个区间分成 n 份，这样我们就得到了 n 个 t 值，然后把这些 t 值代入贝塞尔曲线的参数方程，我们就可以得到 n 个位于贝塞尔曲线上的点，然后把这些点连起来，就得到了一条近似的贝塞尔曲线。")],-1),a("",4)]))}const c=n(p,[["render",t]]);export{F as __pageData,c as default};
